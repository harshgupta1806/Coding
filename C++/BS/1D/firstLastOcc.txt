    int first(vector<int>& nums, int t){
        int l=0,r=nums.size()-1;
        while(l<=r){
            int m=r+(l-r)/2;
            if(nums[m]==t){
                if(!m || nums[m-1]<t) return m;
                else r=m-1;
            }else if(nums[m] > t){
                r=m-1;
            }else l=m+1;
        }
        return -1;
    }
    int last(vector<int>& nums, int t){
        int l=0,r=nums.size()-1;
        while(l<=r){
            int m=r+(l-r)/2;
            if(nums[m]==t){
                if(m==nums.size()-1 || nums[m+1]>t) return m;
                else l=m+1;
            }else if(nums[m] > t){
                r=m-1;
            }else l=m+1;
        }
        return -1;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        return {first(nums,target), last(nums,target)};
    }