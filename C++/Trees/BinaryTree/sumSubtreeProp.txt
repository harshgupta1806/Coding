bool solve(Node* root,map<Node*,int> &mp)
{
    if(!root) return true;
    if(!root->left && !root->right) {mp[root]=root->data;return true;}
    bool left=solve(root->left,mp);
    bool right=solve(root->right,mp);
    bool isSum = ((mp[root->left] + mp[root->right])==root->data);
    if(left && right && isSum){
        mp[root] = root->data + mp[root->left] + mp[root->right];
        return true;
    }
    return false;
}
    bool isSumTree(Node* root)
{
    map<Node*,int> mp;
    return solve(root,mp);
}

OR

bool isSumTree(Node* root)
{
    if(!root) return true;
    if(!root->left && !root->right) return true;
    bool left=isSumTree(root->left);
    bool right=isSumTree(root->right);
    int sum=0;
    if(root->left) sum += root->left->data;
    if(root->right) sum += root->right->data;
    bool isSum = (sum==root->data);
    if(left && right && isSum){
        root->data += sum;
        return true;
    }
    return false;
}