int orangesRotting(vector<vector<int>>& grid) {
    int n=grid.size();
    int m=grid[0].size();
    queue<pair<pair<int,int>,int>> q;
    vector<vector<int>> vis(n,vector<int>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j]==2){
                vis[i][j]=1;
                q.push({{i,j},0});
            }
        }
    }
    int ans=0;
    int cx[4]={-1,0,1,0};
    int cy[4]={0,1,0,-1};
    while(!q.empty()){
        int r=q.front().first.first;
        int c=q.front().first.second;
        int t=q.front().second;
        ans=max(ans,t);
        q.pop();
        for(int i=0;i<4;i++){
            int nr=r+cx[i];
            int nc=c+cy[i];
            if(nr>=0 && nr<n && nc>=0 && nc<m && !vis[nr][nc] && grid[nr][nc]){
                vis[nr][nc]=1;
                q.push({{nr,nc},t+1});
            }
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j] && !vis[i][j]){
                return -1;
            }
        }
    }
    return ans;
}