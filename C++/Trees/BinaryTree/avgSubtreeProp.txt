//Return the number of nodes where the value of the node is equal to the average of the values in its subtree.

    pair<int,pair<int,int>> solve(TreeNode* root){
        if(!root) return {0,{0,0}};
        if(!root->left && !root->right) return {1,{1,root->val}};
        pair<int,pair<int,int>> left = solve(root->left);
        pair<int,pair<int,int>> right = solve(root->right);
        int ans = left.first + right.first;
        int count = left.second.first + right.second.first + 1;
        int sum = left.second.second + root->val + right.second.second;
        if(root->val == (sum/count)) return {ans+1,{count,sum}};
        else return {ans,{count,sum}};
    }
    int averageOfSubtree(TreeNode* root) {
        return solve(root).first;
    }