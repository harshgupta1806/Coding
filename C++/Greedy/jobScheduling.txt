
struct Job 
{ 
    int id;	 // Job Id 
    int dead; // Deadline of job 
    int profit; // Profit if job is over before or on deadline 
};

vector<int> JobScheduling(Job arr[], int n) 
{ 
    sort(arr,arr+n,[](Job j1, Job j2){
        return j1.profit > j2.profit;
    });
    
    vector<int> dp(n+1,0);
    int ans1=0,ans2=0;
    for(int i=0;i<n;i++){
        int d=arr[i].dead;
        while(d>0 && dp[d]){
            d--;
        }
        if(d>0){
            dp[d]=arr[i].id;
            ans1++;
            ans2+=arr[i].profit;
        }
    }
    return {ans1,ans2};
} 