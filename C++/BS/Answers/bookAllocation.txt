Given an array ‘arr’ of integer numbers, ‘arr[i]’ represents the number of pages in the ‘i-th’ book.
There are ‘m’ number of students, and the task is to allocate all the books to the students.
Allocate books in such a way that:
1. Each student gets at least one book.
2. Each book should be allocated to only one student.
3. Book allocation should be in a contiguous manner.
You have to allocate the book to ‘m’ students such that the maximum number of pages assigned to a student is minimum.
If the allocation of books is not possible, return -1.



    int findPages(vector<int>& arr, int b, int s) {
        if(b<s) return -1;
        int l=*max_element(arr.begin(),arr.end()), h=accumulate(arr.begin(),arr.end(),0);
        while(l<=h){
            int m=(h+l)/2,cp=0,cs=1;
            for(auto p:arr){
                if(cp+p <= m) cp+=p;
                else {cs++;cp=p;};
            }
            if(cs <= s) h=m-1;
            else l=m+1;
        }
        return l;
    }