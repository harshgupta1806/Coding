vector<int> bellmonFord(int n,int src, vector<vector<int>> &edges) {
    vector<int> dis(n,1e9);
    dis[src]=0;
    //n-1 times relaxation
    for(int i=0;i<n-1;i++){
        for(auto x:edges){
            int from=x[0];
            int to=x[1];
            int ew=x[2];
            if(dis[from]!=1e9 && dis[from]+ew < dis[to]){
                dis[to]=dis[from]+ew;
            }
        }
    }
    //nth time relaxation
    for(auto x:edges){
        int from=x[0];
        int to=x[1];
        int ew=x[2];
        if(dis[from]!=1e8 && dis[from]+ew < dis[to]){
            //if at nth iteration dis arr changes then negative cycle
            return {-1};
        }
    }
    return dis;
}