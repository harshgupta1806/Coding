    
    TreeNode *build(int ps, int pe, int is, int ie, vector<int>& pre, vector<int>& in, unordered_map<int,int>& mp){
        if(ps>pe || is>ie) return NULL;
        TreeNode* root = new TreeNode(pre[ps]);
        int rootPos = mp[pre[ps]], numLeft = rootPos-is;
        root->left = build(ps+1,ps+numLeft,is,rootPos-1,pre,in,mp);
        root->right = build(ps+numLeft+1,pe,rootPos+1,ie,pre,in,mp);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        unordered_map<int,int> mp;
        for(int i=0;i<inorder.size();i++){
            mp[inorder[i]]=i;
        }
        return build(0,preorder.size()-1,0,inorder.size()-1,preorder,inorder,mp);
    }