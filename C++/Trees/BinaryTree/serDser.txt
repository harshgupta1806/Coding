    string serialize(TreeNode* root) {
        if(!root) return "";
        string ans="";
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            TreeNode* cur=q.front();
            q.pop();
            if(!cur){
                ans+= "null,";
            }else{
                ans+= to_string(cur->val)+",";
                q.push(cur->left);
                q.push(cur->right);
            }
        }
        return ans;
    }
    
    TreeNode* deserialize(string data) {
        if(data.size()==0) return NULL;
        stringstream s(data);
        string str;
        queue<TreeNode*> q;
        getline(s,str,',');
        TreeNode *root=new TreeNode(stoi(str));
        q.push(root);
        while(!q.empty()){
            TreeNode* node=q.front();
            q.pop();
            getline(s,str,',');
            if(str=="null"){
                node->left=NULL;
            }else{
                TreeNode *leftNode=new TreeNode(stoi(str));
                node->left=leftNode;
                q.push(leftNode);
            }
            getline(s,str,',');
            if(str=="null"){
                node->right==NULL;
            }else{
                TreeNode *rightNode=new TreeNode(stoi(str));
                node->right=rightNode;
                q.push(rightNode);
            }
        }
        return root;
    }