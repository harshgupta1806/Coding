//Optimal

    vector<vector<int>> fourSum(vector<int>& nums, int t) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        for(int i=0;i<n-1;i++){
            if(i && nums[i]==nums[i-1]) continue;
            for(int j=i+1;j<n-1;j++){
                if(j!=i+1 && nums[j]==nums[j-1]) continue;
                int k=j+1,l=n-1;
                while(k<l){
                    long long sum = nums[i]+nums[j];
                    sum += nums[k]+nums[l]; 
                    if(sum == t){
                        ans.push_back({nums[i],nums[j],nums[k],nums[l]});
                        k++;
                        while(nums[k]==nums[k-1] && k<l) k++;
                        l--;
                        while(nums[l]==nums[l+1] && k<l) l--;
                    }else if(sum < t) k++;
                    else l--;
                }
            }
        }
        return ans;
    }