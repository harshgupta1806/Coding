Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n.

    struct Node{
        Node* link[2];
    };
    class Trie{
        public:
        Node* root;
        Trie(){
            root=new Node();
        }
        void insert(int n){
            Node *node=root;
            for(int i=32;i>0;i--){
                int bit = (n & 1<<(i-1)) != 0;
                if(!node->link[bit]){
                    node->link[bit]=new Node();
                }
                node = node->link[bit];
            }
        }
        int search(int n){
            Node *node=root;
            int ans=0;
            for(int i=32;i>0;i--){
                int bit = (n & 1<<(i-1)) != 0;
                if(node->link[!bit]){
                    ans = ans | 1<<(i-1);
                    node=node->link[!bit];
                }else node=node->link[bit];
            }
            return ans;
        }
    };
    int findMaximumXOR(vector<int>& nums) {
        Trie t;
        int ans=0;
        for(auto n:nums) t.insert(n);
        for(auto n:nums) ans=max(ans,t.search(n));
        return ans;
    }