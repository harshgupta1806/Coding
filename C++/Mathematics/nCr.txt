
    int solve(int n, int r, int mod, vector<vector<int>>& dp){
        if(!r || n==r) return 1;
        if(dp[n][r]!=-1) return dp[n][r];
        return dp[n][r]=(solve(n-1,r-1,mod,dp) + solve(n-1,r,mod,dp))%mod;
    }
    int nCr(int n, int r){
        if(r>n) return 0;
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
        return solve(n,r,1e9+7,dp);
    }

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    int nCr(int n, int r){
        if(r>n) return 0;
        vector<vector<int>> dp(n+1,vector<int>(r+1));
        int mod=1e9+7;
        for(int i=0;i<=n;i++) dp[i][0]=1;
        for(int i=0;i<=r;i++) dp[i][i]=1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=r;j++){
                dp[i][j]=(dp[i-1][j-1]+dp[i-1][j])%mod;
            }
        }
        return dp[n][r]%mod;
    }

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    ll C(int n, int r)
    {
        ll res = 1;
        r = min(n - r, r);
        for (int i = 0; i < r; i++)
        {
            res = (res * 1LL * (n - i)) % MOD;
            res = (res * 1LL * power(i + 1, mod - 2, mod)) % MOD;
        }
        return res;
    }