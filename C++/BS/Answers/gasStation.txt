We have a horizontal number line. On that number line, we have gas stations at positions 
stations[0], stations[1], ..., stations[N-1], where n = size of the stations array. 
Now, we add k more gas stations so that d, the maximum distance between adjacent gas stations, is minimized.
We have to find the smallest possible value of d. Find the answer exactly to 2 decimal places.


    double findSmallestMaxDist(vector<int> &stations, int k) {
        double n=stations.size(),l=0,h=-1;
        for(int i=1;i<n;i++) h=max(h,(double)(stations[i]-stations[i-1]));
        while(l+1e-6<=h){
            double m=(l+h)/2.0,cs=0;
            for(int i=1;i<n;i++){
                int cnt = (stations[i]-stations[i-1])/m;
                if(stations[i]-stations[i-1] == m*cnt) cnt--;
                cs+=cnt;
            }
            if(cs > k) l=m;
            else h=m;
        }
        return h;
    }