

    bool basedOnwt(vector<int> edge1, vector<int> edge2)
    {
        return edge1[2] < edge2[2];
    }
    int kruskal(vector<vector<int>> edges, int n)
    {
        // if adj given convert to edges;
        disjointSet ds(n);
        int mstWt = 0;
        sort(edges.begin(), edges.end(), basedOnwt);
        for (auto x : edges)
        {
            int from = x[0];
            int to = x[1];
            int ew = x[2];
            if (ds.findPar(from) != ds.findPar(to))
            {
                mstWt += ew;
                ds.unionBySize(from, to);
            }
        }
        return mstWt;
    }
