void solve(int o,int c,string &s,vector<string> &res,int n){
    if(s.length()==n){
        res.push_back(s);
        return;
    }
    if(o<n/2){
        s.push_back('(');
        solve(o+1,c,s,res,n);
        s.pop_back();
    }
    if(c<o){
        s.push_back(')');
        solve(o,c+1,s,res,n);
        s.pop_back();
    }
}
vector<string> generateParenthesis(int n) {
    vector<string> res;
    string s="";
    solve(0,0,s,res,2*n);
    return res;
}