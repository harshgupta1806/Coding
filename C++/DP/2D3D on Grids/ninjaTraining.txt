
N days
each day one of 3 activities
every activity has a merit point
no same activiy on consecutive day
return max merit
    3 days:
    18 11 19
    4 13 7
    1 8 13
    out-> 45

    2 days:
    10 50 1
    5 100 11
    out-> 110
--------------------------------------------------------------------------------------------------------------------------------------------

    int solve(int d, int p, int n, vector<vector<int>>& arr, vector<vector<int>>& dp){
        if(d==n) return 0;
        if(dp[d][p+1]!=-1) return dp[d][p+1];
        int one=0, two=0, zero=0;
        if(p!=0) zero=arr[d][0]+solve(d+1,0,n,arr,dp);
        if(p!=1) one=arr[d][1]+solve(d+1,1,n,arr,dp);
        if(p!=2) two=arr[d][2]+solve(d+1,2,n,arr,dp);
        return dp[d][p+1]=max({zero,one,two});
    }
    int maximumPoints(vector<vector<int>>& arr, int n) {
        vector<vector<int>> dp(n,vector<int>(4,-1));
        return solve(0,-1,n,arr,dp);
    }

--------------------------------------------------------------------------------------------------------------------------------------------

    int maximumPoints(vector<vector<int>>& arr, int n) {
        vector<vector<int>> dp(n,vector<int>(3,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<3;j++){
                if(!i) dp[i][j]=arr[i][j];
                else{
                    int a=INT_MIN;
                    for(int k=0;k<3;k++){
                        if(k!=j) a=max(a,dp[i-1][k]);
                    }
                    dp[i][j]=a+arr[i][j];
                }
            }
        }
        int ans=INT_MIN;
        for(auto a:dp[n-1]) ans=max(ans,a);
        return ans;
    }



