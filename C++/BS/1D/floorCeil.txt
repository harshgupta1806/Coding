
    int findFloor(vector<int>& v, int x) {
        int n=v.size(),l=0,h=n-1;
        int floor = -1;
        while(l<=h){
            int m=l+(h-l)/2;
            if(v[m]==x) return floor=v[m];
            else if(v[m]>x) h=m-1;
            else{
                floor=m;
                l=m+1;
            }
        }
        return floor==-1?-1:v[floor];
    }
    int findCeil(vector<int>& v, int x) {
        int n=v.size(),l=0,h=n-1;
        int ceil = -1;
        while(l<=h){
            int m=l+(h-l)/2;
            if(v[m]==x) return ceil=v[m];
            else if(v[m]<x) l=m+1;
            else{
                ceil=m;
                h=m-1;
            }
        }
        return ceil==-1?-1:v[ceil];
    }
    pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
        return {findFloor(a,x), findCeil(a,x)};
    }