Given k sorted arrays arranged in the form of a matrix of size k * k. The task is to merge them into one sorted array.

    vector<int> mergeKArrays(vector<vector<int>> arr, int K)
    {
        priority_queue<int,vector<int>,greater<int>> pq;
        for(auto a:arr) for(auto b:a) pq.push(b);
        vector<int> ans;
        while(!pq.empty()) {ans.push_back(pq.top());pq.pop();}
        return ans;
    }

--------------------------------------------------------------------------------------------------------------------------------------------------

    ListNode* mergesort(ListNode* h1, ListNode* h2){
        if(!h1) return h2;
        if(!h2) return h1;
        if(h1->val > h2->val) return mergesort(h2,h1);
        ListNode* cur=h1, *t1=h1->next, *t2=h2;
        while(t1 && t2){
            if(t1->val < t2->val){
                cur->next=t1;
                t1=t1->next;
            }else{
                cur->next=t2;
                t2=t2->next;
            }
            cur=cur->next;
        }
        cur->next = !t1 ? t2 : t1;
        return h1;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.empty()) return NULL;
        ListNode* temp=lists[0];
        for(int i=1;i<lists.size();i++){
            temp=mergesort(temp,lists[i]);
        }
        return temp;
    }