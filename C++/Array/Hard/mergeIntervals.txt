Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, 
and return an array of the non-overlapping intervals that cover all the intervals in the input.


    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        vector<vector<int>> ans={intervals[0]};
        for(int i=1;i<intervals.size();i++){
            int s = intervals[i][0];
            int e = intervals[i][1];
            int p_s = ans.back()[0];
            int p_e = ans.back()[1];
            if(p_e >= s){
                ans.back()[1]=max(e,p_e);
            }else{
                ans.push_back({s,e});
            }
        }  
        return ans; 
    }