    ListNode* push(ListNode* head, int x){
        ListNode * newNode = new ListNode(x);
        if(!head) head=newNode;
        else{
            ListNode* temp=head;
            while(temp->next) temp=temp->next;
            temp->next=newNode;
        }
        return head;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(!lists.size()) return NULL;
        priority_queue<int,vector<int>,greater<int>> pq;
        for(auto a:lists){
            while(a){
                pq.push(a->val);
                a=a->next;
            }
        } 
        ListNode *head=NULL;
        while(!pq.empty()){
            head=push(head,pq.top());
            pq.pop();
        }
        return head;
    }