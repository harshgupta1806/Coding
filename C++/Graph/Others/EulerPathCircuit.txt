

// print 2->Euler Cycle(all has even degrees)
// print 1->Euler path(only 2 vert has odd degrees)
// 0->otherwise



int isEulerCircuit(int V, vector<int> adj[])
{
    int t = 0;
    for (int i = 0; i < V; ++i)
    {
        int sz = adj[i].size();
        if (sz & 1)
            t++;
    }
    return (t == 0) ? (2) : ((t == 2) ? 1 : 0);
}

***********************************************************************************************************************************
Eulerian circuit in directed graphs: a directed graph has an Eulerian circuit if and only if the following conditions are met:

1.All vertices have equal in-degree and out-degree.
2. all non zero degree vertices are strongly connected -> The graph is strongly connected 
(or, more generally, has a single strongly connected component).

    If the graph has one component and equal in-degree and out-degree at every vertex, 
    the conditions are sufficient to imply that the graph is strongly connected.

Conclusion:
If the graph is given to have a single component and equal in-degree and out-degree for every vertex, 
then the graph must be strongly connected.
************************************************************************************************************************************