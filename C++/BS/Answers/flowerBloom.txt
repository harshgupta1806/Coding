You are given an integer array bloomDay, an integer m and an integer k.
You want to make m bouquets. To make a bouquet, you need to use k adjacent flowers from the garden.
The garden consists of n flowers, the ith flower will bloom in the bloomDay[i] and then can be used in exactly one bouquet.
Return the minimum number of days you need to wait to be able to make m bouquets from the garden. 
If it is impossible to make m bouquets return -1.

    int minDays(vector<int>& bd, int n, int k) {
        if((long long)n*k > bd.size()) return -1;
        int l=*min_element(bd.begin(),bd.end());
        int h=*max_element(bd.begin(),bd.end());
        while(l<=h){
            int m=(h+l)/2,tb=0,cnt=0;
            for(auto b:bd){
                if(b<=m) cnt++;
                else {tb += (cnt/k);cnt=0;}
            }
            tb+=cnt/k;
            if(tb >= n) h=m-1;
            else l=m+1;
        }
        return l;
    }