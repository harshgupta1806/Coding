    
    int largestRectangleArea(vector<int>& h) {
        int n=h.size();
        vector<int> psi(n,0), nsi(n,n-1);
        stack<int> st;
        for(int i=0;i<n;i++){
            while(!st.empty() && h[st.top()] >= h[i]) st.pop();
            if(!st.empty()) psi[i]=st.top()+1;
            st.push(i);
        }
        while(!st.empty()) st.pop();
        for(int i=n-1;i>=0;i--){
            while(!st.empty() && h[st.top()] >= h[i]) st.pop();
            if(!st.empty()) nsi[i]=st.top()-1;
            st.push(i);
        }
        int ans=-1;
        for(int i=0;i<n;i++) ans=max(ans,(nsi[i]-psi[i]+1)*h[i]);
        return ans;
    }

-----------------------------------------------------single pass-------------------------------------------------------

      int largestRectangleArea(vector<int>& h) {
        int n=h.size();
        stack<int> st;
        int ans=0;
        for(int i=0;i<=n;i++){
            while(!st.empty() && (i==n || h[st.top()] >= h[i])){
                int cur = st.top();
                st.pop();
                int nsi = i;
                int psi = st.empty() ? -1 : st.top();
                ans = max(ans, h[cur] * (nsi - psi - 1));
            }
            st.push(i);
        }
        return ans;
    }