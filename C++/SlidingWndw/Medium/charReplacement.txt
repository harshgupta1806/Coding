You are given a string s and an integer k. You can choose any character of the string and change it to any other 
uppercase English character. You can perform this operation at most k times.
Return the length of the longest substring containing the same letter you can get after performing the above operations.


    int characterReplacement(string s, int k) {
        int i=0,j=0,maxFreq=0,maxLen=0,freq[26]={0};
        while(j<s.length()){
            freq[s[j]-'A']++;
            maxFreq=max(maxFreq,freq[s[j]-'A']);
            while((j-i+1 - maxFreq) > k){
                freq[s[i]-'A']--;
                i++;
                maxFreq=max(maxFreq,freq[s[j]-'A']);
            }
            maxLen=max(maxLen,j-i+1);
            j++;
        }
        return maxLen;
    }