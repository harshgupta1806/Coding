struct Queue
{
    int front, rear, capacity;
    int *queue;
    Queue(int c)
    {
        front = rear = 0;
        capacity = c;
        queue = new int[c];
    }
    ~Queue() { delete[] queue; }
    void queueEnqueue(int data)
    {
        if (capacity == rear)
        {
            printf("\nQueue is full\n");
            return;
        }
        queue[rear++] = data;
    }
    void queueDequeue()
    {
        if (front == rear)
        {
            printf("\nQueue is empty\n");
            return;
        }
        front++;
    }
    void queueDisplay()
    {
        int i;
        if (front == rear)
        {
            printf("\nQueue is Empty\n");
            return;
        }
        for (i = front; i < rear; i++)
        {
            printf(" %d <-- ", queue[i]);
        }
        return;
    }
    void queueFront()
    {
        if (front == rear)
        {
            printf("\nQueue is Empty\n");
            return;
        }
        printf("\nFront Element is: %d", queue[front]);
        return;
    }
};