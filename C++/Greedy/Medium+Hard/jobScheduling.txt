
    struct Job 
    { 
        int id;	 // Job Id 
        int dead; // Deadline of job 
        int profit; // Profit if job is over before or on deadline 
    };

    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr,arr+n,[](Job j1, Job j2){return j1.profit > j2.profit;});
        int jd=0,p=0;
        vector<int> deadline(n+1);
        for(int i=0;i<n;i++){
            int d=arr[i].dead;
            while(d && deadline[d]) d--; 
            if(d){
                deadline[d]=arr[i].id;
                jd++;
                p+=arr[i].profit;
            }
        }
        return {jd,p};
    } 